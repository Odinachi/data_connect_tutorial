"""
✨ `Notes_KeyOutput` returns the primary key fields of table type `Notes`.

It has the same format as `Notes_Key`, but is only used as mutation return value.
"""
scalar Notes_KeyOutput
"""
✨ `Users_KeyOutput` returns the primary key fields of table type `Users`.

It has the same format as `Users_Key`, but is only used as mutation return value.
"""
scalar Users_KeyOutput
"""
✨ Generated data input type for table 'Notes'. It includes all necessary fields for creating or upserting rows into table.
"""
input Notes_Data {
  """
  ✨ Generated from Field `Notes`.`id` of type `UUID!`
  """
  id: UUID
  """
  ✨ `_expr` server value variant of `id` (✨ Generated from Field `Notes`.`id` of type `UUID!`)
  """
  id_expr: UUID_Expr
  """
  ✨ Generated from Field `Notes`.`userId` of type `UUID!`
  """
  userId: UUID
  """
  ✨ `_expr` server value variant of `userId` (✨ Generated from Field `Notes`.`userId` of type `UUID!`)
  """
  userId_expr: UUID_Expr
  """
  ✨ Generated from Field `Notes`.`user` of type `Users!`
  """
  user: Users_Key
  """
  ✨ Generated from Field `Notes`.`content` of type `String!`
  """
  content: String
  """
  ✨ `_expr` server value variant of `content` (✨ Generated from Field `Notes`.`content` of type `String!`)
  """
  content_expr: String_Expr
  """
  ✨ Generated from Field `Notes`.`createdAt` of type `Timestamp!`
  """
  createdAt: Timestamp
  """
  ✨ `_expr` server value variant of `createdAt` (✨ Generated from Field `Notes`.`createdAt` of type `Timestamp!`)
  """
  createdAt_expr: Timestamp_Expr
  """
  ✨ `_time` server value variant of `createdAt` (✨ Generated from Field `Notes`.`createdAt` of type `Timestamp!`)
  """
  createdAt_time: Timestamp_Relative
  """
  ✨ Generated from Field `Notes`.`title` of type `String!`
  """
  title: String
  """
  ✨ `_expr` server value variant of `title` (✨ Generated from Field `Notes`.`title` of type `String!`)
  """
  title_expr: String_Expr
  """
  ✨ Generated from Field `Notes`.`updatedAt` of type `Timestamp!`
  """
  updatedAt: Timestamp
  """
  ✨ `_expr` server value variant of `updatedAt` (✨ Generated from Field `Notes`.`updatedAt` of type `Timestamp!`)
  """
  updatedAt_expr: Timestamp_Expr
  """
  ✨ `_time` server value variant of `updatedAt` (✨ Generated from Field `Notes`.`updatedAt` of type `Timestamp!`)
  """
  updatedAt_time: Timestamp_Relative
}
"""
✨ Generated filter input type for table 'Notes'. This input allows filtering objects using various conditions. Use `_or`, `_and`, and `_not` to compose complex filters.
"""
input Notes_Filter {
  """
  Apply multiple filter conditions using `AND` logic.
  """
  _and: [Notes_Filter!]
  """
  Negate the result of the provided filter condition.
  """
  _not: Notes_Filter
  """
  Apply multiple filter conditions using `OR` logic.
  """
  _or: [Notes_Filter!]
  """
  ✨ Generated from Field `Notes`.`id` of type `UUID!`
  """
  id: UUID_Filter
  """
  ✨ Generated from Field `Notes`.`userId` of type `UUID!`
  """
  userId: UUID_Filter
  """
  ✨ Generated from Field `Notes`.`user` of type `Users!`
  """
  user: Users_Filter
  """
  ✨ Generated from Field `Notes`.`content` of type `String!`
  """
  content: String_Filter
  """
  ✨ Generated from Field `Notes`.`createdAt` of type `Timestamp!`
  """
  createdAt: Timestamp_Filter
  """
  ✨ Generated from Field `Notes`.`title` of type `String!`
  """
  title: String_Filter
  """
  ✨ Generated from Field `Notes`.`updatedAt` of type `Timestamp!`
  """
  updatedAt: Timestamp_Filter
}
"""
✨ Generated first-row input type for table 'Notes'. This input selects the first row matching the filter criteria, ordered according to the specified conditions.
"""
input Notes_FirstRow {
  """
  Order the result by the specified fields.
  """
  orderBy: [Notes_Order!]
  """
  Filters rows based on the specified conditions.
  """
  where: Notes_Filter
}
"""
✨ Generated key input type for table 'Notes'. It represents the primary key fields used to uniquely identify a row in the table.
"""
input Notes_Key {
  """
  ✨ Generated from Field `Notes`.`id` of type `UUID!`
  """
  id: UUID
  """
  ✨ `_expr` server value variant of `id` (✨ Generated from Field `Notes`.`id` of type `UUID!`)
  """
  id_expr: UUID_Expr
}
"""
✨ Generated list filter input type for table 'Notes'. This input applies filtering logic based on the count or existence of related objects that matches certain criteria.
"""
input Notes_ListFilter {
  """
  The desired number of objects that match the condition (defaults to at least one).
  """
  count: Int_Filter = {gt:0}
  """
  Condition of the related objects to filter for.
  """
  exist: Notes_Filter
}
"""
✨ Generated order input type for table 'Notes'. This input defines the sorting order of rows in query results based on one or more fields.
"""
input Notes_Order {
  """
  ✨ Generated from Field `Notes`.`id` of type `UUID!`
  """
  id: OrderDirection
  """
  ✨ Generated from Field `Notes`.`userId` of type `UUID!`
  """
  userId: OrderDirection
  """
  ✨ Generated from Field `Notes`.`user` of type `Users!`
  """
  user: Users_Order
  """
  ✨ Generated from Field `Notes`.`content` of type `String!`
  """
  content: OrderDirection
  """
  ✨ Generated from Field `Notes`.`createdAt` of type `Timestamp!`
  """
  createdAt: OrderDirection
  """
  ✨ Generated from Field `Notes`.`title` of type `String!`
  """
  title: OrderDirection
  """
  ✨ Generated from Field `Notes`.`updatedAt` of type `Timestamp!`
  """
  updatedAt: OrderDirection
}
"""
✨ Generated data input type for table 'Users'. It includes all necessary fields for creating or upserting rows into table.
"""
input Users_Data {
  """
  ✨ Generated from Field `Users`.`id` of type `UUID!`
  """
  id: UUID
  """
  ✨ `_expr` server value variant of `id` (✨ Generated from Field `Users`.`id` of type `UUID!`)
  """
  id_expr: UUID_Expr
  """
  ✨ Generated from Field `Users`.`createdAt` of type `Timestamp!`
  """
  createdAt: Timestamp
  """
  ✨ `_expr` server value variant of `createdAt` (✨ Generated from Field `Users`.`createdAt` of type `Timestamp!`)
  """
  createdAt_expr: Timestamp_Expr
  """
  ✨ `_time` server value variant of `createdAt` (✨ Generated from Field `Users`.`createdAt` of type `Timestamp!`)
  """
  createdAt_time: Timestamp_Relative
  """
  ✨ Generated from Field `Users`.`email` of type `String!`
  """
  email: String
  """
  ✨ `_expr` server value variant of `email` (✨ Generated from Field `Users`.`email` of type `String!`)
  """
  email_expr: String_Expr
  """
  ✨ Generated from Field `Users`.`name` of type `String!`
  """
  name: String
  """
  ✨ `_expr` server value variant of `name` (✨ Generated from Field `Users`.`name` of type `String!`)
  """
  name_expr: String_Expr
  """
  ✨ Generated from Field `Users`.`uid` of type `String!`
  """
  uid: String
  """
  ✨ `_expr` server value variant of `uid` (✨ Generated from Field `Users`.`uid` of type `String!`)
  """
  uid_expr: String_Expr
}
"""
✨ Generated filter input type for table 'Users'. This input allows filtering objects using various conditions. Use `_or`, `_and`, and `_not` to compose complex filters.
"""
input Users_Filter {
  """
  Apply multiple filter conditions using `AND` logic.
  """
  _and: [Users_Filter!]
  """
  Negate the result of the provided filter condition.
  """
  _not: Users_Filter
  """
  Apply multiple filter conditions using `OR` logic.
  """
  _or: [Users_Filter!]
  """
  ✨ Generated from Field `Users`.`id` of type `UUID!`
  """
  id: UUID_Filter
  """
  ✨ Generated from Field `Users`.`createdAt` of type `Timestamp!`
  """
  createdAt: Timestamp_Filter
  """
  ✨ Generated from Field `Users`.`email` of type `String!`
  """
  email: String_Filter
  """
  ✨ Generated from Field `Users`.`name` of type `String!`
  """
  name: String_Filter
  """
  ✨ Generated from Field `Users`.`uid` of type `String!`
  """
  uid: String_Filter
  """
  ✨ Generated from Field `Users`.`notes_on_user` of type `[Notes!]!`
  """
  notes_on_user: Notes_ListFilter
}
"""
✨ Generated first-row input type for table 'Users'. This input selects the first row matching the filter criteria, ordered according to the specified conditions.
"""
input Users_FirstRow {
  """
  Order the result by the specified fields.
  """
  orderBy: [Users_Order!]
  """
  Filters rows based on the specified conditions.
  """
  where: Users_Filter
}
"""
✨ Generated key input type for table 'Users'. It represents the primary key fields used to uniquely identify a row in the table.
"""
input Users_Key {
  """
  ✨ Generated from Field `Users`.`id` of type `UUID!`
  """
  id: UUID
  """
  ✨ `_expr` server value variant of `id` (✨ Generated from Field `Users`.`id` of type `UUID!`)
  """
  id_expr: UUID_Expr
}
"""
✨ Generated list filter input type for table 'Users'. This input applies filtering logic based on the count or existence of related objects that matches certain criteria.
"""
input Users_ListFilter {
  """
  The desired number of objects that match the condition (defaults to at least one).
  """
  count: Int_Filter = {gt:0}
  """
  Condition of the related objects to filter for.
  """
  exist: Users_Filter
}
"""
✨ Generated order input type for table 'Users'. This input defines the sorting order of rows in query results based on one or more fields.
"""
input Users_Order {
  """
  ✨ Generated from Field `Users`.`id` of type `UUID!`
  """
  id: OrderDirection
  """
  ✨ Generated from Field `Users`.`createdAt` of type `Timestamp!`
  """
  createdAt: OrderDirection
  """
  ✨ Generated from Field `Users`.`email` of type `String!`
  """
  email: OrderDirection
  """
  ✨ Generated from Field `Users`.`name` of type `String!`
  """
  name: OrderDirection
  """
  ✨ Generated from Field `Users`.`uid` of type `String!`
  """
  uid: OrderDirection
}
